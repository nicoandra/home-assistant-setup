homeassistant:
  # Name of the location where Home Assistant is running
  name: Home
  # Location required to calculate the time the sun rises and sets
  latitude: 45.5303786
  longitude: -73.5545572
  # Impacts weather/sunrise data (altitude above sea level in meters)
  # elevation: 0
  # metric for Metric, imperial for Imperial
  unit_system: metric
  # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  time_zone: America/Montreal
  # Customization file
  customize: !include customize.yaml

# Show links to resources in log and frontend
# introduction: false

logger:
  default: warn

# Enables the frontend
frontend:

# Enables configuration UI
config:

http:
  # Secrets are defined in the file secrets.yaml
  api_password: !secret http_password
  # Uncomment this if you are using SSL/TLS, running in Docker container, etc.
  base_url: example.duckdns.org:8123

# Checks for available updates
# Note: This component will send some information about your system to
# the developers to assist with development of Home Assistant.
# For more information, please see:
# https://home-assistant.io/blog/2016/10/25/explaining-the-updater/
updater:
  # Optional, allows Home Assistant developers to focus on popular components.
  include_used_components: true

# Discover some devices automatically
discovery:

# Allows you to issue voice commands from the frontend in enabled browsers
conversation:

# Enables support for tracking state changes over time
history:

# View all events in a logbook
logbook:

# Enables a map showing the location of tracked devices
map:

# Track the sun
sun:

mqtt:
  broker: mosquitto

# Weather prediction
sensor: !include sensors.yaml

# Text to speech
tts:
 - platform: google

scene: !include scenes.yaml

# Cloud
cloud:

group: !include groups.yaml
automation: !include_dir_list automations

# mqtt_statestream:
#   base_topic: homeassistant
#   publish_attributes: false
#   publish_timestamps: false

device_tracker:
  - platform: owntracks_http

# Example configuration.yaml entry

light: !include lights.yaml

input_text:
  current_scene:
    name: Current Scene


switch:
  - platform: mqtt
    name: "living_heater"
    command_topic: "living/temperature/switch1/set" # Tricky, this will EXPOSE the status
    state_topic: "/ThermoDev/Heaters/PowerHeater01" # This will SET the status
    state_on: 1111
    state_off: 1100
    optimistic: true
  - platform: mqtt
    name: "office_heater"
    command_topic: "office/temperature/switch2/set" # Tricky, this will EXPOSE the status
    state_topic: "/ThermoDev/Heaters/PowerHeater02" # This will SET the status
    state_on: 1111
    state_off: 1100
    optimistic: true
  - platform: mqtt
    name: "kitchen_heater"
    command_topic: "kitchen/temperature/switch2/set" # Tricky, this will EXPOSE the status
    state_topic: "/ThermoDev/Heaters/PowerHeater03" # This will SET the status
    state_on: 1111
    state_off: 1100
    optimistic: true

climate: !include climate.yaml

rest_command:
  zoneminder_stop:
    url: 'https://192.168.1.106:8180/zm/api/states/change/stop.json'
    method: POST
  zoneminder_start:
    url: 'https://192.168.1.106:8180/zm/api/states/change/start.json'
    method: POST

input_number:
  living_temperature:
    name: Living °C
    initial: 16
    min: 12
    max: 33
    step: .5
  kitchen_temperature:
    name: Kitchen °C
    initial: 16
    min: 12
    max: 33
    step: .5
  office_temperature:
    name: Office °C
    initial: 16
    min: 12
    max: 33
    step: .5

zone: !include zones.yaml
