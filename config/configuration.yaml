homeassistant:
  # Name of the location where Home Assistant is running
  name: Home
  # Location required to calculate the time the sun rises and sets
  latitude: 45.5049
  longitude: -73.7142
  # Impacts weather/sunrise data (altitude above sea level in meters)
  elevation: 0
  # metric for Metric, imperial for Imperial
  unit_system: metric
  # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  time_zone: America/Montreal
  # Customization file
  customize: !include customize.yaml

# Show links to resources in log and frontend
# introduction: false

# Enables the frontend
frontend:

# Enables configuration UI
config:

http:
  # Secrets are defined in the file secrets.yaml
  # api_password: !secret http_password
  # Uncomment this if you are using SSL/TLS, running in Docker container, etc.
  # base_url: example.duckdns.org:8123

# Checks for available updates
# Note: This component will send some information about your system to
# the developers to assist with development of Home Assistant.
# For more information, please see:
# https://home-assistant.io/blog/2016/10/25/explaining-the-updater/
updater:
  # Optional, allows Home Assistant developers to focus on popular components.
  include_used_components: true

# Discover some devices automatically
discovery:

# Allows you to issue voice commands from the frontend in enabled browsers
conversation:

# Enables support for tracking state changes over time
history:

# View all events in a logbook
logbook:

# Enables a map showing the location of tracked devices
map:

# Track the sun
sun:

mqtt:
  broker: 192.168.1.250

# Weather prediction
sensor:
  - platform: yr
  - platform: openweathermap
    api_key: !secret openweathermap_apikey
    monitored_conditions:
      - weather
  - platform: mqtt
    name: "Living Temperature"
    state_topic: "/living/temp/temperature"
    unit_of_measurement: '°C'
    # value_template: "{{ value_json.temperature }}"
  - platform: mqtt
    name: "Living Humidity"
    state_topic: "/living/temp/humidity"
    unit_of_measurement: '%'
  - platform: mqtt
    name: "Office Temperature"
    state_topic: "/office/temp/temperature"
    unit_of_measurement: '°C'
    # value_template: "{{ value_json.temperature }}"
  - platform: mqtt
    name: "Office Humidity"
    state_topic: "/office/temp/humidity"
    unit_of_measurement: '%'
  - platform: mqtt
    name: "Kitchen Temperature"
    state_topic: "/kitchen/temp/temperature"
    unit_of_measurement: '°C'
    # value_template: "{{ value_json.temperature }}"
  - platform: mqtt
    name: "Kitchen Humidity"
    state_topic: "/kitchen/temp/humidity"
    unit_of_measurement: '%'
  - platform: template
    sensors:
      living_temperature_setpoint:
        friendly_name: "Living Setpoint Reached"
        value_template: >-
          {% if states('sensor.living_temperature')|float < states('input_number.living_temperature')|float %}
            no
          {% else %}
            yes
          {% endif %}

      office_temperature_setpoint:
        friendly_name: "Office Setpoint Reached"
        value_template: >-
          {% if states('sensor.office_temperature')|float < states('input_number.office_temperature')|float %}
            no
          {% else %}
            yes
          {% endif %}

      kitchen_temperature_setpoint:
        friendly_name: "Kitchen Setpoint Reached"
        value_template: >-
          {% if states('sensor.kitchen_temperature')|float < states('input_number.kitchen_temperature')|float %}
            no
          {% else %}
            yes
          {% endif %}

# Text to speech
tts:
 - platform: google

scene: !include scenes.yaml

# Cloud
cloud:

group: !include groups.yaml
automation: !include_dir_list automations

# mqtt_statestream:
#   base_topic: homeassistant
#   publish_attributes: false
#   publish_timestamps: false


# Example configuration.yaml entry

light:
  - platform: limitlessled
    bridges:
     - host: 192.168.1.148
       version: 4
       port: 8899
       groups:
        - number: 1
          type: rgbw
          name: Office
          fade: on
        - number: 2
          type: rgbw
          name: Kitchen
          fade: on
        - number: 4
          type: rgbw
          name: Couch
          fade: on
  - platform: yeelight
    devices:
      192.168.1.232:
        name: Office Yee
        transition: 1000
        use_music_mode: False #(defaults to False)
        save_on_change: True #(defaults to True)
      192.168.1.147:
        name: Living Moon
        transition: 1000
        use_music_mode: False #(defaults to False)
        save_on_change: True #(defaults to True)
      192.168.1.234:
        name: Bedroom lamp
        transition: 1000
        use_music_mode: False #(defaults to False)
        save_on_change: True #(defaults to True)


switch:
  - platform: mqtt
    name: "living_heater"
    command_topic: "living/temperature/switch1/set" # Tricky, this will EXPOSE the status
    state_topic: "living/temperature/switch1/state" # This will SET the status
    optimistic: true
  - platform: mqtt
    name: "office_heater"
    command_topic: "office/temperature/switch2/set" # Tricky, this will EXPOSE the status
    state_topic: "office/temperature/switch2/state" # This will SET the status
    optimistic: true
  - platform: mqtt
    name: "kitchen_heater"
    command_topic: "kitchen/temperature/switch2/set" # Tricky, this will EXPOSE the status
    state_topic: "kitchen/temperature/switch2/state" # This will SET the status
    optimistic: true

climate:
  - platform: generic_thermostat # See https://www.home-assistant.io/components/climate.generic_thermostat/
    name: Living
    heater: switch.living_heater
    target_sensor: sensor.living_temperature
    target_temp: 16
    keep_alive:
      minutes: 2
    min_cycle_duration:
      seconds: 30
  - platform: generic_thermostat # See https://www.home-assistant.io/components/climate.generic_thermostat/
    name: Office
    heater: switch.office_heater
    target_sensor: sensor.office_temperature
    target_temp: 16
    keep_alive:
      minutes: 2
    min_cycle_duration:
      seconds: 30
  - platform: generic_thermostat # See https://www.home-assistant.io/components/climate.generic_thermostat/
    name: Kitchen
    heater: switch.kitchen_heater
    target_sensor: sensor.kitchen_temperature
    target_temp: 16
    keep_alive:
      minutes: 2
    min_cycle_duration:
      seconds: 30

input_number:
  living_temperature:
    name: Living °C
    initial: 16
    min: 12
    max: 33
    step: .5
  kitchen_temperature:
    name: Kitchen °C
    initial: 16
    min: 12
    max: 33
    step: .5
  office_temperature:
    name: Office °C
    initial: 16
    min: 12
    max: 33
    step: .5
