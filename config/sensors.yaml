- platform: environment_canada
 
- platform: mqtt
  name: "Raw AC vibration sensor"
  state_topic: "door_and_ac/binary_sensor/vibration/state"

- platform: filter
  name: "A/C Vibration"
  entity_id: sensor.raw_ac_vibration_sensor
  filters:
  - filter: lowpass
    time_constant: 5
    precision: 2  

- platform: template
  sensors:
    average_temperature:
      value_template: "{{ ( ( (states('sensor.kitchen_climate_local_temperature') | float ) + (states('sensor.living_thermostat_local_temperature') | float) + (states('sensor.office_thermostat_local_temperature') | float) ) / 3 ) | round(2) }}"
      entity_id:
        - sensor.kitchen_climate_local_temperature
        - sensor.living_thermostat_local_temperature
        - sensor.office_thermostat_local_temperature
      friendly_name: 'Average temperature'
      unit_of_measurement: "C"
    template_montreal_temperature:
      value_template: "{{ ( (states('sensor.weather_current_temperature') | float) ) | round(2) }}"
      entity_id:
        - sensor.weather_current_temperature
      friendly_name: 'Montreal temperature'
      unit_of_measurement: "C"
    template_montreal_humidex:
      value_template: "{{ states('sensor.humidex') | float | round(2) }}"
      entity_id:
        - sensor.humidex
      friendly_name: 'Montreal humidex'
      unit_of_measurement: "C"
    template_montreal_feelslike:
      value_template: >-
        {% if states('sensor.template_montreal_humidex') | float == 0 %}
          {{ states('sensor.template_montreal_temperature') | float }}
        {% else %}
          {{ states('sensor.template_montreal_humidex') | float }}
        {% endif %}
      entity_id:
        - sensor.template_montreal_humidex
        - sensor.template_montreal_temperature
      friendly_name: 'Montreal humidex'
      unit_of_measurement: "C"
    sun_elevation:
      friendly_name: "Sun Elevation"
      unit_of_measurement: '°'
      value_template: "{{ state_attr('sun.sun', 'elevation') }}"
      entity_id:
        - sun.sun

    template_average_humidity:
      value_template: "{{ ( states('sensor.office_humidity') | float + states('sensor.living_humidity') | float ) / 2 | round(2) }}"
      friendly_name: "Average humidity"
      unit_of_measurement: "%"
    template_montreal_humidity:
      value_template: "{{ states('sensor.weather_current_humidity') | float | round(2) }}"
      entity_id:
        - sensor.weather_current_humidity
      friendly_name: "Montreal Humidity"
      unit_of_measurement: "%"

- platform: mqtt
  name: "Raw Basement Temperature"
  state_topic: "basement/sensor/basement_temperature/state"
  unit_of_measurement: '°C'
  # value_template: "{{ value_json.temperature }}"

- platform: mqtt
  name: "Raw Basement Humidity"
  state_topic: "basement/sensor/basement_humidity/state"
  unit_of_measurement: '%'

- platform: filter
  name: "Basement Temperature"
  entity_id: sensor.raw_basement_temperature
  filters:
  - filter: lowpass
    window_size: 5
    precision: 2

- platform: filter
  name: "Basement Humidity"
  entity_id: sensor.raw_basement_humidity
  filters:
  - filter: range
    upper_bound: 150
  - filter: outlier
    window_size: 10
    radius: 20
    precision: 2



- platform: mqtt
  name: Zigbee2mqtt Networkmap
  # if you change base_topic of Zigbee2mqtt, change state_topic accordingly
  state_topic: zigbee2mqtt/bridge/networkmap/raw
  value_template: >-
    {{ now().strftime('%Y-%m-%d %H:%M:%S') }}
  # again, if you change base_topic of Zigbee2mqtt, change json_attributes_topic accordingly
  json_attributes_topic: zigbee2mqtt/bridge/networkmap/raw
  
- platform: "mqtt"
  name: "Kitchen Cube Battery"
  unique_id: "kitchen_cube_battery"
  state_topic: "zigbee2mqtt-aqara/aqara-cube-kitchen"
  availability_topic: "zigbee2mqtt/bridge/state"
  value_template: "{{ value_json.battery }}"
  unit_of_measurement: "%"
  device_class: "battery"

- platform: "mqtt"
  name: "Kitchen Cube Voltage"
  unique_id: "kitchen_cube_voltage"
  state_topic: "zigbee2mqtt-aqara/aqara-cube-kitchen"
  availability_topic: "zigbee2mqtt/bridge/state"
  value_template: "{{ value_json.voltage }}"
  unit_of_measurement: "mV"
  device_class: "voltage"

- platform: "mqtt"
  name: "Kitchen Cube Angle"
  unique_id: "kitchen_cube_angle"
  state_topic: "zigbee2mqtt-aqara/aqara-cube-kitchen"
  availability_topic: "zigbee2mqtt/bridge/state"
  value_template: "{{ value_json.action_angle }}"

- platform: "mqtt"
  name: "Kitchen Cube From-Side"
  unique_id: "kitchen_cube_from_side"
  state_topic: "zigbee2mqtt-aqara/aqara-cube-kitchen"
  availability_topic: "zigbee2mqtt/bridge/state"
  value_template: "{{ value_json.action_from_side }}"

- platform: "mqtt"
  name: "Kitchen Cube Side"
  unique_id: "kitchen_cube_side"
  state_topic: "zigbee2mqtt-aqara/aqara-cube-kitchen"
  availability_topic: "zigbee2mqtt/bridge/state"
  value_template: "{{ value_json.action_side }}"

- platform: "mqtt"
  name: "Kitchen Cube To-Side"
  unique_id: "kitchen_cube_to_side"
  state_topic: "zigbee2mqtt-aqara/aqara-cube-kitchen"
  availability_topic: "zigbee2mqtt/bridge/state"
  value_template: "{{ value_json.action_to_side }}"

- platform: "mqtt"
  name: "Kitchen Cube Action"
  unique_id: "kitchen_cube_action"
  state_topic: "zigbee2mqtt-aqara/aqara-cube-kitchen"
  availability_topic: "zigbee2mqtt/bridge/state"
  value_template: "{{ value_json.action }}"
  icon: "mdi:gesture-double-tap"

- platform: "mqtt"
  name: "Kitchen Cube Link Quality"
  unique_id: "kitchen_cube_linkquality"
  state_topic: "zigbee2mqtt-aqara/aqara-cube-kitchen"
  availability_topic: "zigbee2mqtt/bridge/state"
  value_template: "{{ value_json.linkquality }}"
  unit_of_measurement: "lqi"
  icon: "mdi:signal"

- platform: "mqtt"
  name: "Living Cube Battery"
  unique_id: "living_cube_battery"
  state_topic: "zigbee2mqtt-aqara/aqara-cube-living"
  availability_topic: "zigbee2mqtt/bridge/state"
  value_template: "{{ value_json.battery }}"
  unit_of_measurement: "%"
  device_class: "battery"

- platform: "mqtt"
  name: "Living Cube Voltage"
  unique_id: "living_cube_voltage"
  state_topic: "zigbee2mqtt-aqara/aqara-cube-living"
  availability_topic: "zigbee2mqtt/bridge/state"
  value_template: "{{ value_json.voltage }}"
  unit_of_measurement: "mV"
  device_class: "voltage"

- platform: "mqtt"
  name: "Living Cube Angle"
  unique_id: "living_cube_angle"
  state_topic: "zigbee2mqtt-aqara/aqara-cube-living"
  availability_topic: "zigbee2mqtt/bridge/state"
  value_template: "{{ value_json.action_angle }}"

- platform: "mqtt"
  name: "Living Cube From-Side"
  unique_id: "living_cube_from_side"
  state_topic: "zigbee2mqtt-aqara/aqara-cube-living"
  availability_topic: "zigbee2mqtt/bridge/state"
  value_template: "{{ value_json.action_from_side }}"

- platform: "mqtt"
  name: "Living Cube Side"
  unique_id: "living_cube_side"
  state_topic: "zigbee2mqtt-aqara/aqara-cube-living"
  availability_topic: "zigbee2mqtt/bridge/state"
  value_template: "{{ value_json.action_side }}"

- platform: "mqtt"
  name: "Living Cube To-Side"
  unique_id: "living_cube_to_side"
  state_topic: "zigbee2mqtt-aqara/aqara-cube-living"
  availability_topic: "zigbee2mqtt/bridge/state"
  value_template: "{{ value_json.action_to_side }}"

- platform: "mqtt"
  name: "Living Cube Action"
  unique_id: "living_cube_action"
  state_topic: "zigbee2mqtt-aqara/aqara-cube-living"
  availability_topic: "zigbee2mqtt/bridge/state"
  value_template: "{{ value_json.action }}"
  icon: "mdi:gesture-double-tap"

- platform: "mqtt"
  name: "Living Cube Link Quality"
  unique_id: "living_cube_linkquality"
  state_topic: "zigbee2mqtt-aqara/aqara-cube-living"
  availability_topic: "zigbee2mqtt/bridge/state"
  value_template: "{{ value_json.linkquality }}"
  unit_of_measurement: "lqi"
  icon: "mdi:signal"